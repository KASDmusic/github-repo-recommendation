networks:
  mon_reseau:
    driver: bridge

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Désactive la sécurité pour simplifier
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Allouer 2 Go de mémoire à Elasticsearch
    ports:
      - "9201:9200"
      - "9301:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./data/processed/data_part_0.json:/app/data/processed/data_part_0.json
      - ./data/processed/data_part_1.json:/app/data/processed/data_part_1.json      
      - ./data/processed/data_part_2.json:/app/data/processed/data_part_2.json
      - ./data/processed/data_part_3.json:/app/data/processed/data_part_3.json
      - ./data/processed/data_part_4.json:/app/data/processed/data_part_4.json
      - ./data/processed/data_part_5.json:/app/data/processed/data_part_5.json
    restart: unless-stopped  # Redémarre automatiquement sauf si manuellement arrêté
    networks:
      - mon_reseau

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: kibana
    depends_on:
      - elasticsearch 
    ports:
      - "5602:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9201
    restart: unless-stopped
    
  api_nlp:
    build: ./services/api_nlp
    container_name: api_nlp
    ports:
      - "8000:8000"
    networks:
      - mon_reseau
    depends_on:
      - elasticsearch
      - postgres
      - api_github
      - api_bdd
    restart: unless-stopped

  interface:
    build: ./services/interface 
    container_name: interface
    depends_on:
      - api_nlp
    ports:
      - "8501:8501"
    networks:
      - mon_reseau
    restart: unless-stopped

  interface_admin:
    build: ./services/interface_admin
    container_name: interface_admin
    depends_on:
      - postgres
    ports:
      - "8502:8501"
    networks:
      - mon_reseau
    restart: unless-stopped

  api_bdd:
    build:
      context: ./services/api_bdd
      dockerfile: Dockerfile
    container_name: api_bdd
    depends_on:
      - elasticsearch
    volumes:
      - ./data/processed/data_part_0.json:/app/data/processed/data_part_0.json
      - ./data/processed/data_part_1.json:/app/data/processed/data_part_1.json
      - ./data/processed/data_part_2.json:/app/data/processed/data_part_2.json
      - ./data/processed/data_part_3.json:/app/data/processed/data_part_3.json
      - ./data/processed/data_part_4.json:/app/data/processed/data_part_4.json
      - ./data/processed/data_part_5.json:/app/data/processed/data_part_5.json
    ports:
      - "2100:2100"
    networks:
      - mon_reseau

  api_github:
    build: ./services/api_github
    container_name: api_github
    ports:
      - "8001:8001"
    networks:
      - mon_reseau
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./services/postgresql_db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mon_reseau

volumes:
  es_data:
    driver: local
  pg_data:
    driver: local
